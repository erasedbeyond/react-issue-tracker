[{"/home/shivendra/Documents/issue-tracker/src/index.js":"1","/home/shivendra/Documents/issue-tracker/src/component/App.js":"2","/home/shivendra/Documents/issue-tracker/src/component/Header.js":"3","/home/shivendra/Documents/issue-tracker/src/component/Projects.js":"4","/home/shivendra/Documents/issue-tracker/src/component/Issues.js":"5","/home/shivendra/Documents/issue-tracker/src/assets/ProjectData.js":"6","/home/shivendra/Documents/issue-tracker/src/assets/IssueData.js":"7","/home/shivendra/Documents/issue-tracker/src/component/RaiseIssue.js":"8","/home/shivendra/Documents/issue-tracker/src/component/IssueFilter.js":"9"},{"size":208,"mtime":1611431287612,"results":"10","hashOfConfig":"11"},{"size":743,"mtime":1611603688460,"results":"12","hashOfConfig":"11"},{"size":400,"mtime":1611587063470,"results":"13","hashOfConfig":"11"},{"size":3590,"mtime":1611620657319,"results":"14","hashOfConfig":"11"},{"size":7232,"mtime":1611544374759,"results":"15","hashOfConfig":"11"},{"size":1493,"mtime":1611618599178,"results":"16","hashOfConfig":"11"},{"size":5940,"mtime":1611525568904,"results":"17","hashOfConfig":"11"},{"size":5329,"mtime":1611609303303,"results":"18","hashOfConfig":"11"},{"size":3395,"mtime":1611528042471,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1tsl3ne",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/shivendra/Documents/issue-tracker/src/index.js",[],["42","43"],"/home/shivendra/Documents/issue-tracker/src/component/App.js",["44"],"import Header from './Header'\nimport Projects from './Projects'\nimport Issues from './Issues'\nimport '../css/App.css'\nimport React,{ useState } from 'react'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      tab:true\n    }\n  }\n\n  setTab =(e)=>{\n\n    var val =  e.target.getAttribute('setTab');\n    if(val==='issue')\n    this.setState({\n      tab:false\n    }) \n    if(val==='project')\n    this.setState({\n      tab:true\n    })\n  }\n\n  render(){\n    return (\n\n      <div className=\"app\">\n      <Header setTab={this.setTab}/>\n      <div className='app-main'>{this.state.tab? \n          <Projects setTab={this.setTab}/>: \n          <Issues/>\n        }</div>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","/home/shivendra/Documents/issue-tracker/src/component/Header.js",["45"],"import React from 'react';\nimport home from '../assets/home.svg'\nimport '../css/Header.css'\n\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <div className='header'>\n                <img id='home' src={home} setTab='project' onClick={this.props.setTab} />\n                <h1>React Issue Tracker</h1>\n            </div>\n        );\n    }\n    \n}\n\nexport default Header;","/home/shivendra/Documents/issue-tracker/src/component/Projects.js",["46","47","48","49","50"],"/home/shivendra/Documents/issue-tracker/src/component/Issues.js",["51","52"],"import React from 'react';\nimport {IssueData} from '../assets/IssueData';\nimport RaiseIssue from './RaiseIssue'\nimport '../css/Issues.css'\nimport IssueFilter from './IssueFilter'\nimport exclamation from '../assets/exclamation.svg'\nimport warning from '../assets/warning.svg'\n\n\n\nclass Issues extends React.Component{\n\n\n    constructor(){\n        super();\n        this.state = {\n\n            issueData:IssueData,\n\n            //to filter\n            type:[],\n            priority:[],\n            progress:[],\n            author:'',\n            search:'',\n            tags:[],\n            sort:'',\n\n            //switch between tabs\n            issueTab:false,\n\n            //to store\n            allAuthor:[],\n            allTags:[],\n        }\n    }\n\n    setFilter =(e)=>{\n\n        if(e.target.checked)\n            this.setState({\n                [e.target.name]:[...this.state[e.target.name],e.target.value]\n            })\n        else{ \n            this.setState({\n                [e.target.name]:this.state[e.target.name].filter((item)=> item!==e.target.value)\n            })\n        }\n    }\n\n    addIssue = (e) =>{\n\n        e.number = this.state.issueData.length+1;\n        e.createdAt = Date.now();\n        console.log(e);\n        this.setState({\n            issueData:[...this.state.issueData,e]\n        },this.gettingAllTagsAndAuthor) //adding issue and updating tag and author array\n    }\n\n    setAuthor = (e)=>{\n        e.preventDefault();\n        this.setState({\n            author:e.target.value\n        })\n    }\n    setSearch = (e) =>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    gettingAllTagsAndAuthor = () =>{\n        const allAuthor=[];\n        const allTags=[];\n        this.state.issueData.forEach((item)=>{\n            allAuthor.push(item.author);\n            allTags.push.apply(allTags,item.tags)\n           \n        })\n        const allAuthorSet =new Set(allAuthor);\n        const allTagsSet =new Set(allTags);\n        this.setState({\n            allAuthor:[...allAuthorSet],\n            allTags:[...allTagsSet]\n        })\n\n    }\n\n    toggle = (e)=>{\n        if(e.target.value==='issue-page')\n            this.setState({\n                issueTab:false\n            })\n        if(e.target.value==='raise-issue')\n            this.setState({\n                issueTab:true\n            })\n    }\n\n    componentDidMount(){\n        this.gettingAllTagsAndAuthor()\n       \n    }\n\n    render(){\n        var filters = {\n            type: this.state.type,\n            progress: this.state.progress,\n            priority: this.state.priority\n        }\n        const filterKeys = Object.keys(filters);\n\n        const finalData = this.state.issueData.filter(\n            (eachObj)=>{\n                //some and every method for array or object, some is used when even one value is passed true, and every is used to pass all the values as true \n                return filterKeys.every( //return true and false\n                    (eachKey)=>{\n                        if (!filters[eachKey].length) {\n                            return true; \n                        }\n                       return filters[eachKey].includes(eachObj['labels'][eachKey]) //return true and fasle\n                    }\n                ) \n                // &&  (this.state.tags.every((value)=>eachObj['tags'].indexOf(value)!==-1) ) //to have every tags\n                &&  (this.state.tags.length ===0 || this.state.tags.some((value)=>eachObj['tags'].indexOf(value)!==-1) ) //to have one of the tags\n                &&  (!this.state.author || eachObj.author === this.state.author)\n                &&  (!this.state.search || eachObj.title.toLowerCase().includes(this.state.search) || eachObj.description.toLowerCase().includes(this.state.search))\n            }\n        )\n\n            // finalData.sort((a,b)=> a.number-b.number);\n            console.log(this.state.sort);\n            if(this.state.sort==='ascending'){\n                finalData.sort((a,b)=> a.number-b.number);\n            }\n\n            if(this.state.sort==='descending'){\n                finalData.sort((a,b)=> b.number-a.number);\n            }\n\n\n        \n        return(\n\n            <div className='issues'>\n\n            {\n                this.state.issueTab ? \n\n                <RaiseIssue \n                    addIssue={this.addIssue}\n                    toggle={this.toggle}\n                /> :\n\n                <div className='issues-main'>\n                    <div>\n                        <h2>Issue</h2>    \n                        <button value='raise-issue' onClick={this.toggle}>Add Issues</button>\n                    </div> \n                    <div className='issues-main-container'>\n                        <div className='issue-block'>\n                            <input name='search' onChange={this.setSearch} placeholder='search'/>\n                            <div className='issue-block-container'>\n                                {finalData.map((item,index)=>(<div className='issues-container'>\n                                    \n                                    <div className='issue-serial-number'>\n                                        <span>\n                                            <img className='issue-svg' src={exclamation}/>\n                                         </span>\n                                         <span>\n                                             {item.number}\n                                         </span>\n                                        \n\n                                    </div>\n                                    <div className='issue-title'>{item.title}</div>\n                                    <div className='issue-description'>\n                                        <div className='description-detail'>{item.description}</div>\n                                        <div className='description-tag'>{item.tags.map((tag)=>(<span>#{tag} </span>))}</div>\n                                    </div>\n                                    <div className='issue-labels'>\n                                        <div className={item.labels.type+' label-tag-block'}>{item.labels.type}</div>\n                                        <div className={item.labels.progress+' label-tag-block'}>{item.labels.progress}</div>\n                                        <div className={item.labels.priority+' label-tag-block'}>{item.labels.priority}</div>\n                                    </div>\n                                    <div className='issue-author'>{item.author}</div>\n                                    \n                                </div>))}\n                            </div>\n                        </div>\n                    \n\n                        <IssueFilter \n                            allAuthor={this.state.allAuthor} \n                            allTags={this.state.allTags} \n                            setFilter={this.setFilter}\n                            setAuthor={this.setAuthor}\n                            setSearch={this.setSearch}\n                            \n                        />\n                    </div>\n                </div>\n                \n            }\n            </div>\n        );\n    }\n    \n}\n\nexport default Issues;","/home/shivendra/Documents/issue-tracker/src/assets/ProjectData.js",[],"/home/shivendra/Documents/issue-tracker/src/assets/IssueData.js",[],"/home/shivendra/Documents/issue-tracker/src/component/RaiseIssue.js",[],"/home/shivendra/Documents/issue-tracker/src/component/IssueFilter.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":16,"nodeType":"59","messageId":"60","endLine":5,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":10,"column":17,"nodeType":"63","endLine":10,"endColumn":90},{"ruleId":"61","severity":1,"message":"62","line":80,"column":55,"nodeType":"63","endLine":80,"endColumn":99},{"ruleId":"61","severity":1,"message":"62","line":86,"column":29,"nodeType":"63","endLine":86,"endColumn":93},{"ruleId":"64","severity":1,"message":"65","line":89,"column":29,"nodeType":"63","endLine":89,"endColumn":65},{"ruleId":"61","severity":1,"message":"62","line":90,"column":29,"nodeType":"63","endLine":90,"endColumn":63},{"ruleId":"61","severity":1,"message":"62","line":93,"column":29,"nodeType":"63","endLine":93,"endColumn":67},{"ruleId":"57","severity":1,"message":"66","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":169,"column":45,"nodeType":"63","endLine":169,"endColumn":91},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'warning' is defined but never used.","no-global-assign","no-unsafe-negation"]